<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="folderBrowserDialogDirectory.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="openFileDialogDockerfile.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>229, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AT8sDGjLU0uTAAAAAElFTkSuQmCC
</value>
  </data>
</root>