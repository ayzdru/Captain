<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        Y2/10/x/AH5UvmXK1fo6AAAAAElFTkSuQmCC
</value>
  </data>
</root>